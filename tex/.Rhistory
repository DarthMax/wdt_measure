average_overlap <- function(lists ) {
# calc (number of intersected elements / number of elements in each list) in a 2,x sized vector form sublists 1:n
intersect_n_elements <- function (n, lists){
length(intersect(lists[1,1:n],lists[2,1:n]))/n
}
sum(mapply(intersect_n_elements, 1:length(lists[,1]), list(rbind(lists[,1],lists[,2])))) / length(lists[,1])
}
#test#
test_average_overlap <- function () {
print("test average_overlap")
print("calc vs. manual calc:")
lists <- cbind( c("hallo", "bist", "kannst", "Du"),
c("hallo", "wer", "bist", "Du"))
average_overlap(lists) == (1/1+1/2+2/3+3/4)/4
}
test_average_overlap()
library(iterpc) # to get all combinations from list
multiple_average_overlap <- function(ranked_lists) {
# calculate all distances from given list of indices to compare
calc_distances <- function(indices) {
average_overlap(cbind(ranked_lists[,indices[1]],ranked_lists[,indices[2]]))
}
nr_of_lists <- dim(ranked_lists)[2]
combination_iterator = iterpc(nr_of_lists, 2) # get all combinations as iterator
all_comb <- getall(combination_iterator)
cbind(all_comb, apply(all_comb, 1, calc_distances))
}
test_multiple_average_overlap <- function () {
all_lists <- cbind( c("hallo", "bist", "kannst", "Du" ),
c("hallo", "wer", "bist", "Du"),
c("bist", "hallo", "kannst", "Du")
)
multiple_average_overlap(all_lists)
}
test_multiple_average_overlap()
multiple_average_overlap(all_meassures)
all_meassures <- cbind(tf_idf, poisson, z_score, freqratio)
mydb = dbConnect(MySQL(), user='aliss15a', password='W-aBnP4$f', dbname='deu_news_2015', host='127.0.0.1', port=1119)
library(RMySQL)
mydb = dbConnect(MySQL(), user='aliss15a', password='W-aBnP4$f', dbname='deu_news_2015', host='127.0.0.1', port=1119)
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "1000")
get_measures_from_day <- function (date, measure, limit) {
query = paste("SELECT * ",
"FROM aliss15a_daily_words dw  ",
"JOIN words  ",
"JOIN daily_words ",
"ON dw.w_id=words.w_id ",
"WHERE dw.date=Date( '", date,  "' ) ",
"ORDER BY dw.",measure,
" DESC LIMIT ", limit,
sep='')
print(query)
response = dbSendQuery(mydb, query)
fetch(response, n=-1)
}
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "1000")
get_measures_from_day <- function (date, measure, limit) {
query = paste("SELECT * ",
"FROM aliss15a_daily_words dw  ",
"JOIN words  ",
"WHERE dw.date=Date( '", date,  "' ) ",
" DESC LIMIT ", limit,
print(query)
fetch(response, n=-1)
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "1000")
sep='')
"ORDER BY dw.",measure,
}
"ON dw.w_id=words.w_id ",
response = dbSendQuery(mydb, query)
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "100")
versuchSQL <- "SELECT * FROM (SELECT * FROM aliss15a_daily_words WHERE date=Date( '15-05-02')) dw  JOIN words  JOIN daily_words ON dw.w_id=words.w_id ORDER BY dw.tf_idf DESC LIMIT 100"
versuchSQL <- "SELECT * FROM (SELECT * FROM aliss15a_daily_words WHERE date=Date( '15-05-02')) dw  JOIN words ON dw.w_id=words.w_id ORDER BY dw.tf_idf DESC LIMIT 100"
response = dbSendQuery(mydb, versuchSQL)
fetch(response, n=-1)
response
versuchSQL <- "SELECT * FROM ( aliss15a_daily_words) dw  JOIN words ON dw.w_id=words.w_id  WHERE date=Date( '15-04-01') ORDER BY dw.tf_idf DESC LIMIT 100"
response = dbSendQuery(mydb, versuchSQL)
versuchSQL <- "SELECT * FROM aliss15a_daily_words dw  JOIN words ON dw.w_id=words.w_id  WHERE dw.date=Date('15-04-01') ORDER BY dw.tf_idf DESC LIMIT 100"
response = dbSendQuery(mydb, versuchSQL)
fetch(response, n=-1)
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "100")
get_measures_from_day <- function (date, measure, limit) {
query = paste("SELECT * ",
"FROM aliss15a_daily_words dw  ",
"JOIN words  ",
"ON dw.w_id=words.w_id ",
"WHERE dw.date=Date( '", date,  "' ) ",
" DESC LIMIT ", limit,
print(query)
fetch(response, n=-1)
"ORDER BY dw.",measure,
response = dbSendQuery(mydb, query)
}
sep='')
get_measures_from_day <- function (date, measure, limit) {
query = paste("SELECT * ",
"FROM aliss15a_daily_words dw  ",
"JOIN words  ",
"ON dw.w_id=words.w_id ",
"WHERE dw.date=Date( '", date,  "' ) ",
"ORDER BY dw.",measure,
" DESC LIMIT ", limit,
sep='')
print(query)
response = dbSendQuery(mydb, query)
fetch(response, n=-1)
}
tf_idf <- get_measures_from_day("2015-05-01", "tf_idf", "100")
poisson <- get_measures_from_day("2015-05-01", "poisson", "100")
freqratio <- get_measures_from_day("2015-05-01", "freqratio", "100")
z_score <- get_measures_from_day("2015-05-01", "z_score", "100")
all_meassures <- cbind(tf_idf, poisson, z_score, freqratio)
multiple_average_overlap(all_meassures)
all_meassures <- cbind(tf_idf, poisson, z_score )
multiple_average_overlap(all_meassures)
all_meassures
tf_idf$word
all_meassures <- cbind(tf_idf$word, poisson$word, z_score$word, freqratio$word)
multiple_average_overlap(all_meassures)
freqratio
